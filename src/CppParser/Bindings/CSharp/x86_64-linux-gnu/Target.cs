//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace CppSharp
{
    namespace Parser
    {
        public enum ParserIntType
        {
            NoInt = 0,
            SignedChar = 1,
            UnsignedChar = 2,
            SignedShort = 3,
            UnsignedShort = 4,
            SignedInt = 5,
            UnsignedInt = 6,
            SignedLong = 7,
            UnsignedLong = 8,
            SignedLongLong = 9,
            UnsignedLongLong = 10
        }

        public unsafe partial class ParserTargetInfo : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 160)]
            public struct Internal
            {
                [FieldOffset(8)]
                public CppSharp.Parser.ParserIntType Char16Type;

                [FieldOffset(12)]
                public CppSharp.Parser.ParserIntType Char32Type;

                [FieldOffset(16)]
                public CppSharp.Parser.ParserIntType Int64Type;

                [FieldOffset(20)]
                public CppSharp.Parser.ParserIntType IntMaxType;

                [FieldOffset(24)]
                public CppSharp.Parser.ParserIntType IntPtrType;

                [FieldOffset(28)]
                public CppSharp.Parser.ParserIntType SizeType;

                [FieldOffset(32)]
                public CppSharp.Parser.ParserIntType UIntMaxType;

                [FieldOffset(36)]
                public CppSharp.Parser.ParserIntType WCharType;

                [FieldOffset(40)]
                public CppSharp.Parser.ParserIntType WIntType;

                [FieldOffset(44)]
                public uint BoolAlign;

                [FieldOffset(48)]
                public uint BoolWidth;

                [FieldOffset(52)]
                public uint CharAlign;

                [FieldOffset(56)]
                public uint CharWidth;

                [FieldOffset(60)]
                public uint Char16Align;

                [FieldOffset(64)]
                public uint Char16Width;

                [FieldOffset(68)]
                public uint Char32Align;

                [FieldOffset(72)]
                public uint Char32Width;

                [FieldOffset(76)]
                public uint HalfAlign;

                [FieldOffset(80)]
                public uint HalfWidth;

                [FieldOffset(84)]
                public uint FloatAlign;

                [FieldOffset(88)]
                public uint FloatWidth;

                [FieldOffset(92)]
                public uint DoubleAlign;

                [FieldOffset(96)]
                public uint DoubleWidth;

                [FieldOffset(100)]
                public uint ShortAlign;

                [FieldOffset(104)]
                public uint ShortWidth;

                [FieldOffset(108)]
                public uint IntAlign;

                [FieldOffset(112)]
                public uint IntWidth;

                [FieldOffset(116)]
                public uint IntMaxTWidth;

                [FieldOffset(120)]
                public uint LongAlign;

                [FieldOffset(124)]
                public uint LongWidth;

                [FieldOffset(128)]
                public uint LongDoubleAlign;

                [FieldOffset(132)]
                public uint LongDoubleWidth;

                [FieldOffset(136)]
                public uint LongLongAlign;

                [FieldOffset(140)]
                public uint LongLongWidth;

                [FieldOffset(144)]
                public uint PointerAlign;

                [FieldOffset(148)]
                public uint PointerWidth;

                [FieldOffset(152)]
                public uint WCharAlign;

                [FieldOffset(156)]
                public uint WCharWidth;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("CppSharp.CppParser.dll", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8CppSharp9CppParser16ParserTargetInfoC2ERKS1_")]
                internal static extern void cctor_0(global::System.IntPtr instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("CppSharp.CppParser.dll", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8CppSharp9CppParser16ParserTargetInfoC2Ev")]
                internal static extern void ctor_2(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("CppSharp.CppParser.dll", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8CppSharp9CppParser16ParserTargetInfoD2Ev")]
                internal static extern void dtor_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("CppSharp.CppParser.dll", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8CppSharp9CppParser16ParserTargetInfo6getABIEv")]
                internal static extern global::System.IntPtr getABI_0(global::System.IntPtr instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("CppSharp.CppParser.dll", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="_ZN8CppSharp9CppParser16ParserTargetInfo6setABIEPKc")]
                internal static extern void setABI_0(global::System.IntPtr instance, global::System.IntPtr s);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal ParserTargetInfo(ParserTargetInfo.Internal* native)
                : this(new global::System.IntPtr(native))
            {
            }

            internal ParserTargetInfo(ParserTargetInfo.Internal native)
                : this(&native)
            {
            }

            public ParserTargetInfo(global::System.IntPtr native, bool isInternalImpl = false)
            {
                __Instance = native;
            }

            public ParserTargetInfo()
            {
                __Instance = Marshal.AllocHGlobal(160);
                Internal.ctor_2(__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
                GC.SuppressFinalize(this);
            }

            protected virtual void Dispose(bool disposing)
            {
                Internal.dtor_0(__Instance);
                Marshal.FreeHGlobal(__Instance);
            }

            public string ABI
            {
                get
                {
                    var __ret = Internal.getABI_0(__Instance);
                    if (__ret == global::System.IntPtr.Zero) return null;
                    return Marshal.PtrToStringAnsi(__ret);
                }

                set
                {
                    var arg0 = Marshal.StringToHGlobalAnsi(value);
                    Internal.setABI_0(__Instance, arg0);
                    Marshal.FreeHGlobal(arg0);
                }
            }

            public CppSharp.Parser.ParserIntType Char16Type
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->Char16Type;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->Char16Type = value;
                }
            }

            public CppSharp.Parser.ParserIntType Char32Type
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->Char32Type;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->Char32Type = value;
                }
            }

            public CppSharp.Parser.ParserIntType Int64Type
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->Int64Type;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->Int64Type = value;
                }
            }

            public CppSharp.Parser.ParserIntType IntMaxType
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->IntMaxType;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->IntMaxType = value;
                }
            }

            public CppSharp.Parser.ParserIntType IntPtrType
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->IntPtrType;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->IntPtrType = value;
                }
            }

            public CppSharp.Parser.ParserIntType SizeType
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->SizeType;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->SizeType = value;
                }
            }

            public CppSharp.Parser.ParserIntType UIntMaxType
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->UIntMaxType;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->UIntMaxType = value;
                }
            }

            public CppSharp.Parser.ParserIntType WCharType
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->WCharType;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->WCharType = value;
                }
            }

            public CppSharp.Parser.ParserIntType WIntType
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->WIntType;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->WIntType = value;
                }
            }

            public uint BoolAlign
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->BoolAlign;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->BoolAlign = value;
                }
            }

            public uint BoolWidth
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->BoolWidth;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->BoolWidth = value;
                }
            }

            public uint CharAlign
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->CharAlign;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->CharAlign = value;
                }
            }

            public uint CharWidth
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->CharWidth;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->CharWidth = value;
                }
            }

            public uint Char16Align
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->Char16Align;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->Char16Align = value;
                }
            }

            public uint Char16Width
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->Char16Width;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->Char16Width = value;
                }
            }

            public uint Char32Align
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->Char32Align;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->Char32Align = value;
                }
            }

            public uint Char32Width
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->Char32Width;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->Char32Width = value;
                }
            }

            public uint HalfAlign
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->HalfAlign;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->HalfAlign = value;
                }
            }

            public uint HalfWidth
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->HalfWidth;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->HalfWidth = value;
                }
            }

            public uint FloatAlign
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->FloatAlign;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->FloatAlign = value;
                }
            }

            public uint FloatWidth
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->FloatWidth;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->FloatWidth = value;
                }
            }

            public uint DoubleAlign
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->DoubleAlign;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->DoubleAlign = value;
                }
            }

            public uint DoubleWidth
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->DoubleWidth;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->DoubleWidth = value;
                }
            }

            public uint ShortAlign
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->ShortAlign;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->ShortAlign = value;
                }
            }

            public uint ShortWidth
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->ShortWidth;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->ShortWidth = value;
                }
            }

            public uint IntAlign
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->IntAlign;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->IntAlign = value;
                }
            }

            public uint IntWidth
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->IntWidth;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->IntWidth = value;
                }
            }

            public uint IntMaxTWidth
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->IntMaxTWidth;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->IntMaxTWidth = value;
                }
            }

            public uint LongAlign
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->LongAlign;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->LongAlign = value;
                }
            }

            public uint LongWidth
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->LongWidth;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->LongWidth = value;
                }
            }

            public uint LongDoubleAlign
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->LongDoubleAlign;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->LongDoubleAlign = value;
                }
            }

            public uint LongDoubleWidth
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->LongDoubleWidth;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->LongDoubleWidth = value;
                }
            }

            public uint LongLongAlign
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->LongLongAlign;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->LongLongAlign = value;
                }
            }

            public uint LongLongWidth
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->LongLongWidth;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->LongLongWidth = value;
                }
            }

            public uint PointerAlign
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->PointerAlign;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->PointerAlign = value;
                }
            }

            public uint PointerWidth
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->PointerWidth;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->PointerWidth = value;
                }
            }

            public uint WCharAlign
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->WCharAlign;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->WCharAlign = value;
                }
            }

            public uint WCharWidth
            {
                get
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    return __ptr->WCharWidth;
                }

                set
                {
                    var __ptr = (Internal*)__Instance.ToPointer();
                    __ptr->WCharWidth = value;
                }
            }
        }
    }
}
