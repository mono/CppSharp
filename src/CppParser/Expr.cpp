// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------


#include "Sources.h"
#include "Expr.h"

namespace CppSharp::CppParser::AST {

Expr::Classification::Classification()
{
}

Expr::Expr()
    : ValueStmt(StmtClass::NoStmt)
    , dependence(ExprDependence::UnexpandedPack)
    , type(QualifiedType())
    , isValueDependent(false)
    , isTypeDependent(false)
    , isInstantiationDependent(false)
    , containsUnexpandedParameterPack(false)
    , containsErrors(false)
    , exprLoc(SourceLocation())
    , isReadIfDiscardedInCPlusPlus11(false)
    , isLValue(false)
    , isPRValue(false)
    , isXValue(false)
    , isGLValue(false)
    , isOrdinaryOrBitFieldObject(false)
    , refersToMatrixElement(false)
    , hasPlaceholderType(false)
{
}

Expr::Expr(StmtClass klass)
    : ValueStmt(klass)
    , dependence(ExprDependence::UnexpandedPack)
    , type(QualifiedType())
    , isValueDependent(false)
    , isTypeDependent(false)
    , isInstantiationDependent(false)
    , containsUnexpandedParameterPack(false)
    , containsErrors(false)
    , exprLoc(SourceLocation())
    , isReadIfDiscardedInCPlusPlus11(false)
    , isLValue(false)
    , isPRValue(false)
    , isXValue(false)
    , isGLValue(false)
    , isOrdinaryOrBitFieldObject(false)
    , refersToMatrixElement(false)
    , hasPlaceholderType(false)
{
}

FullExpr::FullExpr()
    : Expr(StmtClass::NoStmt)
    , subExpr(nullptr)
{
}

FullExpr::FullExpr(StmtClass klass)
    : Expr(klass)
    , subExpr(nullptr)
{
}

ConstantExpr::ConstantExpr()
    : FullExpr(StmtClass::ConstantExpr)
    , resultStorageKind(ConstantExpr::ResultStorageKind::None)
    , isImmediateInvocation(false)
    , hasAPValueResult(false)
{
}

OpaqueValueExpr::OpaqueValueExpr()
    : Expr(StmtClass::OpaqueValueExpr)
    , location(SourceLocation())
    , exprLoc(SourceLocation())
    , sourceExpr(nullptr)
    , isUnique(false)
{
}

DeclRefExpr::DeclRefExpr()
    : Expr(StmtClass::DeclRefExpr)
    , location(SourceLocation())
    , hasQualifier(false)
    , hasTemplateKWAndArgsInfo(false)
    , templateKeywordLoc(SourceLocation())
    , lAngleLoc(SourceLocation())
    , rAngleLoc(SourceLocation())
    , hasTemplateKeyword(false)
    , hasExplicitTemplateArgs(false)
    , numTemplateArgs(0)
    , hadMultipleCandidates(false)
    , isNonOdrUse(NonOdrUseReason::None)
    , refersToEnclosingVariableOrCapture(false)
    , isImmediateEscalating(false)
{
}

IntegerLiteral::IntegerLiteral()
    : Expr(StmtClass::IntegerLiteral)
    , location(SourceLocation())
    , value(0)
{
}

FixedPointLiteral::FixedPointLiteral()
    : Expr(StmtClass::FixedPointLiteral)
    , location(SourceLocation())
    , scale(0)
    , value(0)
{
}

CharacterLiteral::CharacterLiteral()
    : Expr(StmtClass::CharacterLiteral)
    , location(SourceLocation())
    , kind(CharacterLiteral::CharacterKind::Ascii)
    , value(0)
{
}

FloatingLiteral::FloatingLiteral()
    : Expr(StmtClass::FloatingLiteral)
    , rawSemantics(FloatSemantics::IEEEhalf)
    , exact(false)
    , valueAsApproximateDouble(0)
    , location(SourceLocation())
{
}

ImaginaryLiteral::ImaginaryLiteral()
    : Expr(StmtClass::ImaginaryLiteral)
    , subExpr(nullptr)
{
}

StringLiteral::StringLiteral()
    : Expr(StmtClass::StringLiteral)
    , byteLength(0)
    , length(0)
    , charByteWidth(0)
    , kind(StringLiteral::StringKind::Ordinary)
    , isOrdinary(false)
    , isWide(false)
    , isUTF8(false)
    , isUTF16(false)
    , isUTF32(false)
    , isUnevaluated(false)
    , isPascal(false)
    , containsNonAscii(false)
    , containsNonAsciiOrNull(false)
    , numConcatenated(0)
{
}

PredefinedExpr::PredefinedExpr()
    : Expr(StmtClass::PredefinedExpr)
    , identKind(PredefinedExpr::IdentKind::Func)
    , isTransparent(false)
    , location(SourceLocation())
{
}

SYCLUniqueStableNameExpr::SYCLUniqueStableNameExpr()
    : Expr(StmtClass::SYCLUniqueStableNameExpr)
    , location(SourceLocation())
    , lParenLocation(SourceLocation())
    , rParenLocation(SourceLocation())
{
}

ParenExpr::ParenExpr()
    : Expr(StmtClass::ParenExpr)
    , subExpr(nullptr)
    , lParen(SourceLocation())
    , rParen(SourceLocation())
{
}

UnaryOperator::UnaryOperator()
    : Expr(StmtClass::UnaryOperator)
    , opcode(UnaryOperatorKind::PostInc)
    , subExpr(nullptr)
    , operatorLoc(SourceLocation())
    , canOverflow(false)
    , isPrefix(false)
    , isPostfix(false)
    , isIncrementOp(false)
    , isDecrementOp(false)
    , isIncrementDecrementOp(false)
    , isArithmeticOp(false)
    , exprLoc(SourceLocation())
    , hasStoredFPFeatures(false)
{
}

OffsetOfExpr::OffsetOfExpr()
    : Expr(StmtClass::OffsetOfExpr)
    , operatorLoc(SourceLocation())
    , rParenLoc(SourceLocation())
    , numComponents(0)
    , numExpressions(0)
{
}

UnaryExprOrTypeTraitExpr::UnaryExprOrTypeTraitExpr()
    : Expr(StmtClass::UnaryExprOrTypeTraitExpr)
    , kind(UnaryExprOrTypeTrait::SizeOf)
    , isArgumentType(false)
    , argumentType(QualifiedType())
    , typeOfArgument(QualifiedType())
    , operatorLoc(SourceLocation())
    , rParenLoc(SourceLocation())
{
}

ArraySubscriptExpr::ArraySubscriptExpr()
    : Expr(StmtClass::ArraySubscriptExpr)
    , lHS(nullptr)
    , rHS(nullptr)
    , rBracketLoc(SourceLocation())
    , exprLoc(SourceLocation())
{
}

MatrixSubscriptExpr::MatrixSubscriptExpr()
    : Expr(StmtClass::MatrixSubscriptExpr)
    , isIncomplete(false)
    , base(nullptr)
    , rowIdx(nullptr)
    , columnIdx(nullptr)
    , exprLoc(SourceLocation())
    , rBracketLoc(SourceLocation())
{
}

CallExpr::CallExpr()
    : Expr(StmtClass::CallExpr)
    , callee(nullptr)
    , aDLCallKind(CallExpr::ADLCallKind::NotADL)
    , usesADL(false)
    , hasStoredFPFeatures(false)
    , numArgs(0)
    , builtinCallee(0)
    , rParenLoc(SourceLocation())
    , isCallToStdMove(false)
{
}

CallExpr::CallExpr(StmtClass klass)
    : Expr(klass)
    , callee(nullptr)
    , aDLCallKind(CallExpr::ADLCallKind::NotADL)
    , usesADL(false)
    , hasStoredFPFeatures(false)
    , numArgs(0)
    , builtinCallee(0)
    , rParenLoc(SourceLocation())
    , isCallToStdMove(false)
{
}

DEF_VECTOR(CallExpr, Expr*, arguments)

MemberExpr::MemberExpr()
    : Expr(StmtClass::MemberExpr)
    , base(nullptr)
    , hasQualifier(false)
    , templateKeywordLoc(SourceLocation())
    , lAngleLoc(SourceLocation())
    , rAngleLoc(SourceLocation())
    , hasTemplateKeyword(false)
    , hasExplicitTemplateArgs(false)
    , numTemplateArgs(0)
    , operatorLoc(SourceLocation())
    , arrow(false)
    , memberLoc(SourceLocation())
    , exprLoc(SourceLocation())
    , isImplicitAccess(false)
    , hadMultipleCandidates(false)
    , isNonOdrUse(NonOdrUseReason::None)
{
}

CompoundLiteralExpr::CompoundLiteralExpr()
    : Expr(StmtClass::CompoundLiteralExpr)
    , initializer(nullptr)
    , fileScope(false)
    , lParenLoc(SourceLocation())
{
}

CastExpr::CastExpr()
    : Expr(StmtClass::NoStmt)
    , castKind(CastKind::Dependent)
    , castKindName(nullptr)
    , subExpr(nullptr)
    , conversionFunction(nullptr)
    , path_empty(false)
    , path_size(0)
    , hasStoredFPFeatures(false)
{
}

CastExpr::CastExpr(StmtClass klass)
    : Expr(klass)
    , castKind(CastKind::Dependent)
    , castKindName(nullptr)
    , subExpr(nullptr)
    , conversionFunction(nullptr)
    , path_empty(false)
    , path_size(0)
    , hasStoredFPFeatures(false)
{
}

ImplicitCastExpr::ImplicitCastExpr()
    : CastExpr(StmtClass::ImplicitCastExpr)
    , isPartOfExplicitCast(false)
{
}

ExplicitCastExpr::ExplicitCastExpr()
    : CastExpr(StmtClass::NoStmt)
    , typeAsWritten(QualifiedType())
{
}

ExplicitCastExpr::ExplicitCastExpr(StmtClass klass)
    : CastExpr(klass)
    , typeAsWritten(QualifiedType())
{
}

CStyleCastExpr::CStyleCastExpr()
    : ExplicitCastExpr(StmtClass::CStyleCastExpr)
    , lParenLoc(SourceLocation())
    , rParenLoc(SourceLocation())
{
}

BinaryOperator::BinaryOperator()
    : Expr(StmtClass::BinaryOperator)
    , exprLoc(SourceLocation())
    , operatorLoc(SourceLocation())
    , opcode(BinaryOperatorKind::PtrMemD)
    , lHS(nullptr)
    , rHS(nullptr)
    , isPtrMemOp(false)
    , isMultiplicativeOp(false)
    , isAdditiveOp(false)
    , isShiftOp(false)
    , isBitwiseOp(false)
    , isRelationalOp(false)
    , isEqualityOp(false)
    , isComparisonOp(false)
    , isCommaOp(false)
    , isLogicalOp(false)
    , isAssignmentOp(false)
    , isCompoundAssignmentOp(false)
    , isShiftAssignOp(false)
    , hasStoredFPFeatures(false)
{
}

BinaryOperator::BinaryOperator(StmtClass klass)
    : Expr(klass)
    , exprLoc(SourceLocation())
    , operatorLoc(SourceLocation())
    , opcode(BinaryOperatorKind::PtrMemD)
    , lHS(nullptr)
    , rHS(nullptr)
    , isPtrMemOp(false)
    , isMultiplicativeOp(false)
    , isAdditiveOp(false)
    , isShiftOp(false)
    , isBitwiseOp(false)
    , isRelationalOp(false)
    , isEqualityOp(false)
    , isComparisonOp(false)
    , isCommaOp(false)
    , isLogicalOp(false)
    , isAssignmentOp(false)
    , isCompoundAssignmentOp(false)
    , isShiftAssignOp(false)
    , hasStoredFPFeatures(false)
{
}

CompoundAssignOperator::CompoundAssignOperator()
    : BinaryOperator(StmtClass::CompoundAssignOperator)
    , computationLHSType(QualifiedType())
    , computationResultType(QualifiedType())
{
}

AbstractConditionalOperator::AbstractConditionalOperator()
    : Expr(StmtClass::NoStmt)
    , cond(nullptr)
    , trueExpr(nullptr)
    , falseExpr(nullptr)
    , questionLoc(SourceLocation())
    , colonLoc(SourceLocation())
{
}

AbstractConditionalOperator::AbstractConditionalOperator(StmtClass klass)
    : Expr(klass)
    , cond(nullptr)
    , trueExpr(nullptr)
    , falseExpr(nullptr)
    , questionLoc(SourceLocation())
    , colonLoc(SourceLocation())
{
}

ConditionalOperator::ConditionalOperator()
    : AbstractConditionalOperator(StmtClass::ConditionalOperator)
    , cond(nullptr)
    , trueExpr(nullptr)
    , falseExpr(nullptr)
    , lHS(nullptr)
    , rHS(nullptr)
{
}

BinaryConditionalOperator::BinaryConditionalOperator()
    : AbstractConditionalOperator(StmtClass::BinaryConditionalOperator)
    , common(nullptr)
    , opaqueValue(nullptr)
    , cond(nullptr)
    , trueExpr(nullptr)
    , falseExpr(nullptr)
{
}

AddrLabelExpr::AddrLabelExpr()
    : Expr(StmtClass::AddrLabelExpr)
    , ampAmpLoc(SourceLocation())
    , labelLoc(SourceLocation())
{
}

StmtExpr::StmtExpr()
    : Expr(StmtClass::StmtExpr)
    , subStmt(nullptr)
    , lParenLoc(SourceLocation())
    , rParenLoc(SourceLocation())
    , templateDepth(0)
{
}

ShuffleVectorExpr::ShuffleVectorExpr()
    : Expr(StmtClass::ShuffleVectorExpr)
    , builtinLoc(SourceLocation())
    , rParenLoc(SourceLocation())
    , numSubExprs(0)
{
}

ConvertVectorExpr::ConvertVectorExpr()
    : Expr(StmtClass::ConvertVectorExpr)
    , srcExpr(nullptr)
    , builtinLoc(SourceLocation())
    , rParenLoc(SourceLocation())
{
}

ChooseExpr::ChooseExpr()
    : Expr(StmtClass::ChooseExpr)
    , isConditionTrue(false)
    , isConditionDependent(false)
    , chosenSubExpr(nullptr)
    , cond(nullptr)
    , lHS(nullptr)
    , rHS(nullptr)
    , builtinLoc(SourceLocation())
    , rParenLoc(SourceLocation())
{
}

GNUNullExpr::GNUNullExpr()
    : Expr(StmtClass::GNUNullExpr)
    , tokenLocation(SourceLocation())
{
}

VAArgExpr::VAArgExpr()
    : Expr(StmtClass::VAArgExpr)
    , subExpr(nullptr)
    , isMicrosoftABI(false)
    , builtinLoc(SourceLocation())
    , rParenLoc(SourceLocation())
{
}

SourceLocExpr::SourceLocExpr()
    : Expr(StmtClass::SourceLocExpr)
    , identKind(SourceLocExpr::IdentKind::Function)
    , isIntType(false)
    , location(SourceLocation())
{
}

InitListExpr::InitListExpr()
    : Expr(StmtClass::InitListExpr)
    , numInits(0)
    , arrayFiller(nullptr)
    , hasArrayFiller(false)
    , hasDesignatedInit(false)
    , isExplicit(false)
    , isStringLiteralInit(false)
    , isTransparent(false)
    , lBraceLoc(SourceLocation())
    , rBraceLoc(SourceLocation())
    , isSemanticForm(false)
    , semanticForm(nullptr)
    , isSyntacticForm(false)
    , syntacticForm(nullptr)
{
}

DesignatedInitExpr::Designator::FieldDesignatorInfo::FieldDesignatorInfo()
{
}

DesignatedInitExpr::Designator::ArrayOrRangeDesignatorInfo::ArrayOrRangeDesignatorInfo()
{
}

DesignatedInitExpr::Designator::Designator()
{
}

DesignatedInitExpr::DesignatedInitExpr()
    : Expr(StmtClass::DesignatedInitExpr)
    , size(0)
    , equalOrColonLoc(SourceLocation())
    , isDirectInit(false)
    , usesGNUSyntax(false)
    , init(nullptr)
    , numSubExprs(0)
    , designatorsSourceRange(SourceRange())
{
}

NoInitExpr::NoInitExpr()
    : Expr(StmtClass::NoInitExpr)
{
}

DesignatedInitUpdateExpr::DesignatedInitUpdateExpr()
    : Expr(StmtClass::DesignatedInitUpdateExpr)
    , base(nullptr)
    , updater(nullptr)
{
}

ArrayInitLoopExpr::ArrayInitLoopExpr()
    : Expr(StmtClass::ArrayInitLoopExpr)
    , commonExpr(nullptr)
    , subExpr(nullptr)
{
}

ArrayInitIndexExpr::ArrayInitIndexExpr()
    : Expr(StmtClass::ArrayInitIndexExpr)
{
}

ImplicitValueInitExpr::ImplicitValueInitExpr()
    : Expr(StmtClass::ImplicitValueInitExpr)
{
}

ParenListExpr::ParenListExpr()
    : Expr(StmtClass::ParenListExpr)
    , numExprs(0)
    , lParenLoc(SourceLocation())
    , rParenLoc(SourceLocation())
{
}

GenericSelectionExpr::GenericSelectionExpr()
    : Expr(StmtClass::GenericSelectionExpr)
    , numAssocs(0)
    , resultIndex(0)
    , isResultDependent(false)
    , isExprPredicate(false)
    , isTypePredicate(false)
    , genericLoc(SourceLocation())
    , defaultLoc(SourceLocation())
    , rParenLoc(SourceLocation())
{
}

ExtVectorElementExpr::ExtVectorElementExpr()
    : Expr(StmtClass::ExtVectorElementExpr)
    , base(nullptr)
    , accessorLoc(SourceLocation())
    , numElements(0)
    , containsDuplicateElements(false)
    , isArrow(false)
{
}

BlockExpr::BlockExpr()
    : Expr(StmtClass::BlockExpr)
    , caretLocation(SourceLocation())
{
}

AsTypeExpr::AsTypeExpr()
    : Expr(StmtClass::AsTypeExpr)
    , srcExpr(nullptr)
    , builtinLoc(SourceLocation())
    , rParenLoc(SourceLocation())
{
}

PseudoObjectExpr::PseudoObjectExpr()
    : Expr(StmtClass::PseudoObjectExpr)
    , resultExprIndex(0)
    , numSemanticExprs(0)
    , exprLoc(SourceLocation())
{
}

AtomicExpr::AtomicExpr()
    : Expr(StmtClass::AtomicExpr)
    , ptr(nullptr)
    , order(nullptr)
    , scope(nullptr)
    , val1(nullptr)
    , orderFail(nullptr)
    , val2(nullptr)
    , weak(nullptr)
    , valueType(QualifiedType())
    , op(AtomicExpr::AtomicOp::C11AtomicInit)
    , numSubExprs(0)
    , isVolatile(false)
    , isCmpXChg(false)
    , isOpenCL(false)
    , builtinLoc(SourceLocation())
    , rParenLoc(SourceLocation())
{
}

TypoExpr::TypoExpr()
    : Expr(StmtClass::TypoExpr)
{
}

RecoveryExpr::RecoveryExpr()
    : Expr(StmtClass::RecoveryExpr)
{
}

CXXOperatorCallExpr::CXXOperatorCallExpr()
    : CallExpr(StmtClass::CXXOperatorCallExpr)
    , _operator(OverloadedOperatorKind::None)
    , isAssignmentOp(false)
    , isComparisonOp(false)
    , isInfixBinaryOp(false)
    , operatorLoc(SourceLocation())
    , exprLoc(SourceLocation())
    , sourceRange(SourceRange())
{
}

CXXMemberCallExpr::CXXMemberCallExpr()
    : CallExpr(StmtClass::CXXMemberCallExpr)
    , implicitObjectArgument(nullptr)
    , objectType(QualifiedType())
    , methodDecl(nullptr)
    , exprLoc(SourceLocation())
{
}

CUDAKernelCallExpr::CUDAKernelCallExpr()
    : CallExpr(StmtClass::CUDAKernelCallExpr)
{
}

CXXRewrittenBinaryOperator::CXXRewrittenBinaryOperator()
    : Expr(StmtClass::CXXRewrittenBinaryOperator)
    , isReversed(false)
    , _operator(BinaryOperatorKind::PtrMemD)
    , opcode(BinaryOperatorKind::PtrMemD)
    , isComparisonOp(false)
    , isAssignmentOp(false)
    , lHS(nullptr)
    , rHS(nullptr)
    , operatorLoc(SourceLocation())
    , exprLoc(SourceLocation())
    , sourceRange(SourceRange())
{
}

CXXNamedCastExpr::CXXNamedCastExpr()
    : ExplicitCastExpr(StmtClass::NoStmt)
    , castName(nullptr)
    , operatorLoc(SourceLocation())
    , rParenLoc(SourceLocation())
    , angleBrackets(SourceRange())
{
}

CXXNamedCastExpr::CXXNamedCastExpr(StmtClass klass)
    : ExplicitCastExpr(klass)
    , castName(nullptr)
    , operatorLoc(SourceLocation())
    , rParenLoc(SourceLocation())
    , angleBrackets(SourceRange())
{
}

CXXStaticCastExpr::CXXStaticCastExpr()
    : CXXNamedCastExpr(StmtClass::CXXStaticCastExpr)
{
}

CXXDynamicCastExpr::CXXDynamicCastExpr()
    : CXXNamedCastExpr(StmtClass::CXXDynamicCastExpr)
    , isAlwaysNull(false)
{
}

CXXReinterpretCastExpr::CXXReinterpretCastExpr()
    : CXXNamedCastExpr(StmtClass::CXXReinterpretCastExpr)
{
}

CXXConstCastExpr::CXXConstCastExpr()
    : CXXNamedCastExpr(StmtClass::CXXConstCastExpr)
{
}

CXXAddrspaceCastExpr::CXXAddrspaceCastExpr()
    : CXXNamedCastExpr(StmtClass::CXXAddrspaceCastExpr)
{
}

UserDefinedLiteral::UserDefinedLiteral()
    : CallExpr(StmtClass::UserDefinedLiteral)
    , literalOperatorKind(UserDefinedLiteral::LiteralOperatorKind::Raw)
    , uDSuffixLoc(SourceLocation())
{
}

CXXBoolLiteralExpr::CXXBoolLiteralExpr()
    : Expr(StmtClass::CXXBoolLiteralExpr)
    , value(false)
    , location(SourceLocation())
{
}

CXXNullPtrLiteralExpr::CXXNullPtrLiteralExpr()
    : Expr(StmtClass::CXXNullPtrLiteralExpr)
    , location(SourceLocation())
{
}

CXXStdInitializerListExpr::CXXStdInitializerListExpr()
    : Expr(StmtClass::CXXStdInitializerListExpr)
    , sourceRange(SourceRange())
{
}

CXXTypeidExpr::CXXTypeidExpr()
    : Expr(StmtClass::CXXTypeidExpr)
    , isPotentiallyEvaluated(false)
    , isTypeOperand(false)
    , exprOperand(nullptr)
    , sourceRange(SourceRange())
{
}

MSPropertyRefExpr::MSPropertyRefExpr()
    : Expr(StmtClass::MSPropertyRefExpr)
    , sourceRange(SourceRange())
    , isImplicitAccess(false)
    , baseExpr(nullptr)
    , isArrow(false)
    , memberLoc(SourceLocation())
{
}

MSPropertySubscriptExpr::MSPropertySubscriptExpr()
    : Expr(StmtClass::MSPropertySubscriptExpr)
    , rBracketLoc(SourceLocation())
    , exprLoc(SourceLocation())
{
}

CXXUuidofExpr::CXXUuidofExpr()
    : Expr(StmtClass::CXXUuidofExpr)
    , isTypeOperand(false)
    , exprOperand(nullptr)
    , sourceRange(SourceRange())
{
}

CXXThisExpr::CXXThisExpr()
    : Expr(StmtClass::CXXThisExpr)
    , location(SourceLocation())
    , implicit(false)
{
}

CXXThrowExpr::CXXThrowExpr()
    : Expr(StmtClass::CXXThrowExpr)
    , throwLoc(SourceLocation())
    , isThrownVariableInScope(false)
{
}

CXXDefaultArgExpr::CXXDefaultArgExpr()
    : Expr(StmtClass::CXXDefaultArgExpr)
    , hasRewrittenInit(false)
    , usedLocation(SourceLocation())
    , exprLoc(SourceLocation())
{
}

CXXDefaultInitExpr::CXXDefaultInitExpr()
    : Expr(StmtClass::CXXDefaultInitExpr)
    , hasRewrittenInit(false)
    , usedLocation(SourceLocation())
{
}

CXXBindTemporaryExpr::CXXBindTemporaryExpr()
    : Expr(StmtClass::CXXBindTemporaryExpr)
    , subExpr(nullptr)
{
}

CXXConstructExpr::CXXConstructExpr()
    : Expr(StmtClass::CXXConstructExpr)
    , location(SourceLocation())
    , elidable(false)
    , hadMultipleCandidates(false)
    , listInitialization(false)
    , stdInitListInitialization(false)
    , requiresZeroInitialization(false)
    , numArgs(0)
    , isImmediateEscalating(false)
    , parenOrBraceRange(SourceRange())
{
}

CXXConstructExpr::CXXConstructExpr(StmtClass klass)
    : Expr(klass)
    , location(SourceLocation())
    , elidable(false)
    , hadMultipleCandidates(false)
    , listInitialization(false)
    , stdInitListInitialization(false)
    , requiresZeroInitialization(false)
    , numArgs(0)
    , isImmediateEscalating(false)
    , parenOrBraceRange(SourceRange())
{
}

DEF_VECTOR(CXXConstructExpr, Expr*, arguments)

CXXInheritedCtorInitExpr::CXXInheritedCtorInitExpr()
    : Expr(StmtClass::CXXInheritedCtorInitExpr)
    , constructsVBase(false)
    , inheritedFromVBase(false)
    , location(SourceLocation())
{
}

CXXFunctionalCastExpr::CXXFunctionalCastExpr()
    : ExplicitCastExpr(StmtClass::CXXFunctionalCastExpr)
    , lParenLoc(SourceLocation())
    , rParenLoc(SourceLocation())
    , isListInitialization(false)
{
}

CXXTemporaryObjectExpr::CXXTemporaryObjectExpr()
    : CXXConstructExpr(StmtClass::CXXTemporaryObjectExpr)
{
}

LambdaExpr::LambdaExpr()
    : Expr(StmtClass::LambdaExpr)
    , captureDefaultLoc(SourceLocation())
    , capture_size(0)
    , introducerRange(SourceRange())
    , callOperator(nullptr)
    , dependentCallOperator(nullptr)
    , trailingRequiresClause(nullptr)
    , isGenericLambda(false)
    , body(nullptr)
    , isMutable(false)
    , hasExplicitParameters(false)
    , hasExplicitResultType(false)
{
}

DEF_VECTOR(LambdaExpr, Expr*, capture_inits)

CXXScalarValueInitExpr::CXXScalarValueInitExpr()
    : Expr(StmtClass::CXXScalarValueInitExpr)
    , rParenLoc(SourceLocation())
{
}

CXXNewExpr::CXXNewExpr()
    : Expr(StmtClass::CXXNewExpr)
    , allocatedType(QualifiedType())
    , operatorNew(nullptr)
    , operatorDelete(nullptr)
    , isArray(false)
    , numPlacementArgs(0)
    , isParenTypeId(false)
    , typeIdParens(SourceRange())
    , isGlobalNew(false)
    , hasInitializer(false)
    , initializationStyle(CXXNewExpr::InitializationStyle::NoInit)
    , constructExpr(nullptr)
    , directInitRange(SourceRange())
    , sourceRange(SourceRange())
{
}

DEF_VECTOR(CXXNewExpr, Expr*, placement_arguments)

CXXDeleteExpr::CXXDeleteExpr()
    : Expr(StmtClass::CXXDeleteExpr)
    , isGlobalDelete(false)
    , isArrayForm(false)
    , isArrayFormAsWritten(false)
    , operatorDelete(nullptr)
    , destroyedType(QualifiedType())
{
}

CXXPseudoDestructorExpr::CXXPseudoDestructorExpr()
    : Expr(StmtClass::CXXPseudoDestructorExpr)
    , base(nullptr)
    , hasQualifier(false)
    , isArrow(false)
    , operatorLoc(SourceLocation())
    , colonColonLoc(SourceLocation())
    , tildeLoc(SourceLocation())
    , destroyedType(QualifiedType())
    , destroyedTypeLoc(SourceLocation())
{
}

TypeTraitExpr::TypeTraitExpr()
    : Expr(StmtClass::TypeTraitExpr)
    , value(false)
    , numArgs(0)
{
}

ArrayTypeTraitExpr::ArrayTypeTraitExpr()
    : Expr(StmtClass::ArrayTypeTraitExpr)
    , queriedType(QualifiedType())
    , value(0)
    , dimensionExpression(nullptr)
{
}

ExpressionTraitExpr::ExpressionTraitExpr()
    : Expr(StmtClass::ExpressionTraitExpr)
    , queriedExpression(nullptr)
    , value(false)
{
}

OverloadExpr::FindResult::FindResult()
{
}

OverloadExpr::OverloadExpr()
    : Expr(StmtClass::NoStmt)
    , numDecls(0)
    , nameLoc(SourceLocation())
    , templateKeywordLoc(SourceLocation())
    , lAngleLoc(SourceLocation())
    , rAngleLoc(SourceLocation())
    , hasTemplateKeyword(false)
    , hasExplicitTemplateArgs(false)
    , numTemplateArgs(0)
{
}

OverloadExpr::OverloadExpr(StmtClass klass)
    : Expr(klass)
    , numDecls(0)
    , nameLoc(SourceLocation())
    , templateKeywordLoc(SourceLocation())
    , lAngleLoc(SourceLocation())
    , rAngleLoc(SourceLocation())
    , hasTemplateKeyword(false)
    , hasExplicitTemplateArgs(false)
    , numTemplateArgs(0)
{
}

UnresolvedLookupExpr::UnresolvedLookupExpr()
    : OverloadExpr(StmtClass::UnresolvedLookupExpr)
    , requiresADL(false)
    , isOverloaded(false)
{
}

DependentScopeDeclRefExpr::DependentScopeDeclRefExpr()
    : Expr(StmtClass::DependentScopeDeclRefExpr)
    , location(SourceLocation())
    , templateKeywordLoc(SourceLocation())
    , lAngleLoc(SourceLocation())
    , rAngleLoc(SourceLocation())
    , hasTemplateKeyword(false)
    , hasExplicitTemplateArgs(false)
    , numTemplateArgs(0)
{
}

ExprWithCleanups::ExprWithCleanups()
    : FullExpr(StmtClass::ExprWithCleanups)
    , numObjects(0)
    , cleanupsHaveSideEffects(false)
{
}

CXXUnresolvedConstructExpr::CXXUnresolvedConstructExpr()
    : Expr(StmtClass::CXXUnresolvedConstructExpr)
    , typeAsWritten(QualifiedType())
    , lParenLoc(SourceLocation())
    , rParenLoc(SourceLocation())
    , isListInitialization(false)
    , numArgs(0)
{
}

DEF_VECTOR(CXXUnresolvedConstructExpr, Expr*, arguments)

CXXDependentScopeMemberExpr::CXXDependentScopeMemberExpr()
    : Expr(StmtClass::CXXDependentScopeMemberExpr)
    , isImplicitAccess(false)
    , base(nullptr)
    , baseType(QualifiedType())
    , isArrow(false)
    , operatorLoc(SourceLocation())
    , firstQualifierFoundInScope(nullptr)
    , memberLoc(SourceLocation())
    , templateKeywordLoc(SourceLocation())
    , lAngleLoc(SourceLocation())
    , rAngleLoc(SourceLocation())
    , hasTemplateKeyword(false)
    , hasExplicitTemplateArgs(false)
    , numTemplateArgs(0)
{
}

UnresolvedMemberExpr::UnresolvedMemberExpr()
    : OverloadExpr(StmtClass::UnresolvedMemberExpr)
    , isImplicitAccess(false)
    , baseType(QualifiedType())
    , hasUnresolvedUsing(false)
    , isArrow(false)
    , operatorLoc(SourceLocation())
    , memberLoc(SourceLocation())
    , exprLoc(SourceLocation())
{
}

CXXNoexceptExpr::CXXNoexceptExpr()
    : Expr(StmtClass::CXXNoexceptExpr)
    , operand(nullptr)
    , sourceRange(SourceRange())
    , value(false)
{
}

PackExpansionExpr::PackExpansionExpr()
    : Expr(StmtClass::PackExpansionExpr)
    , ellipsisLoc(SourceLocation())
    , numExpansions(std::optional<unsigned int>())
{
}

SizeOfPackExpr::SizeOfPackExpr()
    : Expr(StmtClass::SizeOfPackExpr)
    , operatorLoc(SourceLocation())
    , packLoc(SourceLocation())
    , rParenLoc(SourceLocation())
    , pack(nullptr)
    , packLength(0)
    , isPartiallySubstituted(false)
{
}

SubstNonTypeTemplateParmExpr::SubstNonTypeTemplateParmExpr()
    : Expr(StmtClass::SubstNonTypeTemplateParmExpr)
    , nameLoc(SourceLocation())
    , replacement(nullptr)
    , associatedDecl(nullptr)
    , index(0)
    , packIndex(std::optional<unsigned int>())
    , isReferenceParameter(false)
{
}

SubstNonTypeTemplateParmPackExpr::SubstNonTypeTemplateParmPackExpr()
    : Expr(StmtClass::SubstNonTypeTemplateParmPackExpr)
    , associatedDecl(nullptr)
    , index(0)
    , parameterPackLocation(SourceLocation())
    , argumentPack(TemplateArgument())
{
}

FunctionParmPackExpr::FunctionParmPackExpr()
    : Expr(StmtClass::FunctionParmPackExpr)
    , parameterPackLocation(SourceLocation())
    , numExpansions(0)
{
}

MaterializeTemporaryExpr::MaterializeTemporaryExpr()
    : Expr(StmtClass::MaterializeTemporaryExpr)
    , subExpr(nullptr)
    , manglingNumber(0)
    , isBoundToLvalueReference(false)
{
}

CXXFoldExpr::CXXFoldExpr()
    : Expr(StmtClass::CXXFoldExpr)
    , callee(nullptr)
    , lHS(nullptr)
    , rHS(nullptr)
    , isRightFold(false)
    , isLeftFold(false)
    , pattern(nullptr)
    , init(nullptr)
    , lParenLoc(SourceLocation())
    , rParenLoc(SourceLocation())
    , ellipsisLoc(SourceLocation())
    , _operator(BinaryOperatorKind::PtrMemD)
    , numExpansions(std::optional<unsigned int>())
{
}

CXXParenListInitExpr::CXXParenListInitExpr()
    : Expr(StmtClass::CXXParenListInitExpr)
    , initLoc(SourceLocation())
    , sourceRange(SourceRange())
    , arrayFiller(nullptr)
{
}

CoroutineSuspendExpr::CoroutineSuspendExpr()
    : Expr(StmtClass::NoStmt)
    , commonExpr(nullptr)
    , opaqueValue(nullptr)
    , readyExpr(nullptr)
    , suspendExpr(nullptr)
    , resumeExpr(nullptr)
    , operand(nullptr)
    , keywordLoc(SourceLocation())
{
}

CoroutineSuspendExpr::CoroutineSuspendExpr(StmtClass klass)
    : Expr(klass)
    , commonExpr(nullptr)
    , opaqueValue(nullptr)
    , readyExpr(nullptr)
    , suspendExpr(nullptr)
    , resumeExpr(nullptr)
    , operand(nullptr)
    , keywordLoc(SourceLocation())
{
}

CoawaitExpr::CoawaitExpr()
    : CoroutineSuspendExpr(StmtClass::CoawaitExpr)
    , isImplicit(false)
{
}

DependentCoawaitExpr::DependentCoawaitExpr()
    : Expr(StmtClass::DependentCoawaitExpr)
    , operand(nullptr)
    , operatorCoawaitLookup(nullptr)
    , keywordLoc(SourceLocation())
{
}

CoyieldExpr::CoyieldExpr()
    : CoroutineSuspendExpr(StmtClass::CoyieldExpr)
{
}

BuiltinBitCastExpr::BuiltinBitCastExpr()
    : ExplicitCastExpr(StmtClass::BuiltinBitCastExpr)
{
}

}
